# Generated by Django 3.2 on 2021-04-22 09:33

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataPermissionRule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='default', max_length=10, unique=True, verbose_name='规则名称')),
                ('is_all', models.BooleanField(default=False, verbose_name='全部权限')),
                ('content_type', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.contenttype', verbose_name='关联模型')),
            ],
            options={
                'db_table': 'sys_permission_rule',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='菜单名称')),
                ('path', models.CharField(max_length=200, unique=True, verbose_name='URL')),
                ('icon', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='图标')),
                ('index', models.IntegerField(default=0, verbose_name='菜单序列')),
                ('level', models.IntegerField(choices=[(0, '一级菜单'), (1, '二级菜单'), (2, '三级菜单'), (999, '按钮功能')], default=0, verbose_name='菜单级别')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='Rbac.menu', verbose_name='父级菜单')),
                ('permission', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='Rbac.datapermissionrule', verbose_name='数据权限')),
            ],
            options={
                'db_table': 'sys_menus',
                'unique_together': {('parent', 'index')},
            },
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=50, verbose_name='操作类型')),
                ('method', models.CharField(choices=[('POST', '添加'), ('GET', '查询'), ('DELETE', '删除'), ('PATCH', '修改')], default='POST', max_length=7, null=True, verbose_name='请求类型')),
            ],
            options={
                'db_table': 'sys_request_type',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='default', max_length=32, verbose_name='角色')),
                ('desc', models.TextField(blank=True, verbose_name='角色描述')),
                ('data_permission', models.ManyToManyField(blank=True, to='Rbac.DataPermissionRule')),
                ('menu', models.ManyToManyField(blank=True, to='Rbac.Menu', verbose_name='Menu')),
            ],
            options={
                'db_table': 'sys_roles',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='用户名')),
                ('name', models.CharField(default='default', max_length=50, verbose_name='姓名')),
                ('mobile', models.CharField(default='186000000000', max_length=12, verbose_name='手机')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱地址')),
                ('is_active', models.BooleanField(default=True, verbose_name='有效')),
                ('is_staff', models.BooleanField(default=True, verbose_name='员工')),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建日期')),
                ('update_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='更新日期')),
                ('last_login', models.DateTimeField(auto_now_add=True, null=True, verbose_name='最近登录')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('roles', models.ManyToManyField(to='Rbac.Role', verbose_name='角色')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'User',
                'db_table': 'sys_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=60)),
                ('update_date', models.DateTimeField(default=0, verbose_name='更新日期')),
                ('expiration_time', models.DateTimeField(default=0, verbose_name='失效时间')),
                ('username', models.OneToOneField(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户token表',
                'verbose_name_plural': '用户token表',
                'db_table': 'sys_token',
            },
        ),
        migrations.AddField(
            model_name='datapermissionrule',
            name='request_type',
            field=models.ManyToManyField(default=0, to='Rbac.RequestType', verbose_name='请求类型'),
        ),
        migrations.CreateModel(
            name='DataPermissionList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('operate_type', models.CharField(default='eq', max_length=20, verbose_name='运算规则')),
                ('value', models.CharField(default='', max_length=20, verbose_name='值')),
                ('check_field', models.CharField(default='pk', max_length=20, null=True, verbose_name='校验的字段')),
                ('permission_rule', models.ManyToManyField(to='Rbac.DataPermissionRule', verbose_name='数据权限规则')),
            ],
            options={
                'db_table': 'sys_data_permission_list',
                'unique_together': {('check_field', 'value')},
            },
        ),
    ]
